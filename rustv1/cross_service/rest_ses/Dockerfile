# chef and planner steps pre-compile the upstream create dependencies.
FROM lukemathwalker/cargo-chef:latest-rust-1.62.1 as chef
WORKDIR /app
RUN apt update && apt install lld clang -y

FROM chef as planner
COPY Cargo.toml .
# Compute a lock-like file for our project.
RUN cargo chef prepare  --recipe-path recipe.json

# After pre-building the crates, build the app binary.
FROM chef as builder
COPY --from=planner /app/recipe.json recipe.json
# Build our project dependencies, not our application.
RUN cargo chef cook --release --recipe-path recipe.json
COPY . .
# Build our project.
RUN cargo build --release --bin rest_ses

# Take the final binary from the builder, and the local configuration files.
FROM debian:bullseye-slim AS runtime
WORKDIR /app
RUN apt-get update -y \
  && apt-get install -y --no-install-recommends openssl ca-certificates \
  # Clean up.
  && apt-get autoremove -y \
  && apt-get clean -y \
  && rm -rf /var/lib/apt/lists/*
COPY --from=builder /app/target/release/rest_ses rest_ses
COPY configuration configuration
ENV APP_ENVIRONMENT production
ENTRYPOINT ["./rest_ses"]
