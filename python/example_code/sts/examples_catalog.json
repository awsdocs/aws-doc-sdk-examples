{
	"examples": [
		{
			"id": "sts_AssumeRole",
			"file": "sts_metadata.yaml",
			"languages": {
				".NET": {
					"name": ".NET",
					"property": "csharp",
					"versions": [
						{
							"sdk_version": 3,
							"block_content": null,
							"excerpts": [
								{
									"description": null,
									"snippet_tags": [
										"STS.dotnetv3.AssumeRoleMessage"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "dotnetv3/STS",
							"sdkguide": null,
							"more_info": []
						}
					]
				},
				"Python": {
					"name": "Python",
					"property": "python",
					"versions": [
						{
							"sdk_version": 3,
							"block_content": null,
							"excerpts": [
								{
									"description": "Assume an &IAM; role that requires an MFA token and use temporary credentials to list &S3; buckets for the account.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_AssumeRoleMfa_list_buckets"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "python/example_code/sts",
							"sdkguide": null,
							"more_info": []
						}
					]
				},
				"Ruby": {
					"name": "Ruby",
					"property": "ruby",
					"versions": [
						{
							"sdk_version": 3,
							"block_content": null,
							"excerpts": [
								{
									"description": null,
									"snippet_tags": [
										"ruby.sts.AssumeRole"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "ruby/example_code/iam",
							"sdkguide": null,
							"more_info": []
						}
					]
				},
				"JavaScript": {
					"name": "JavaScript",
					"property": "javascript",
					"versions": [
						{
							"sdk_version": 3,
							"block_content": null,
							"excerpts": [
								{
									"description": "Create the client.",
									"snippet_tags": [
										"javascript.v3.sts.client"
									],
									"snippet_files": [],
									"genai": "none"
								},
								{
									"description": "Assume the &IAM; role.",
									"snippet_tags": [
										"javascript.v3.sts.actions.AssumeRole"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "javascriptv3/example_code/sts",
							"sdkguide": null,
							"more_info": []
						},
						{
							"sdk_version": 2,
							"block_content": null,
							"excerpts": [
								{
									"description": null,
									"snippet_tags": [
										"sts.JavaScript.assumeRole"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "javascript/example_code/sts",
							"sdkguide": null,
							"more_info": []
						}
					]
				},
				"C++": {
					"name": "C++",
					"property": "cpp",
					"versions": [
						{
							"sdk_version": 1,
							"block_content": null,
							"excerpts": [
								{
									"description": null,
									"snippet_tags": [
										"sts.cpp.assume_role"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "cpp/example_code/sts",
							"sdkguide": null,
							"more_info": []
						}
					]
				},
				"Java": {
					"name": "Java",
					"property": "java",
					"versions": [
						{
							"sdk_version": 2,
							"block_content": null,
							"excerpts": [
								{
									"description": null,
									"snippet_tags": [
										"sts.java2.assume_role.main"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "javav2/example_code/sts",
							"sdkguide": null,
							"more_info": []
						}
					]
				},
				"Swift": {
					"name": "Swift",
					"property": "swift",
					"versions": [
						{
							"sdk_version": 1,
							"block_content": null,
							"excerpts": [
								{
									"description": null,
									"snippet_tags": [
										"sts.swift.import",
										"iam.swift.basics.sts.assumerole"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "swift/example_code/iam",
							"sdkguide": null,
							"more_info": []
						}
					]
				},
				"Rust": {
					"name": "Rust",
					"property": "rust",
					"versions": [
						{
							"sdk_version": 1,
							"block_content": null,
							"excerpts": [
								{
									"description": null,
									"snippet_tags": [
										"sts.rust.assume_role"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "rustv1/examples/sts/",
							"sdkguide": null,
							"more_info": []
						}
					]
				},
				"Bash": {
					"name": "Bash",
					"property": "bash",
					"versions": [
						{
							"sdk_version": 2,
							"block_content": null,
							"excerpts": [
								{
									"description": null,
									"snippet_tags": [
										"aws-cli.bash-linux.iam.iecho",
										"aws-cli.bash-linux.iam.errecho",
										"aws-cli.bash-linux.sts.assume-role"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "aws-cli/bash-linux/iam",
							"sdkguide": null,
							"more_info": []
						}
					]
				}
			},
			"title": "",
			"title_abbrev": "",
			"synopsis": "",
			"category": "Api",
			"guide_topic": null,
			"service_main": null,
			"services": {
				"sts": {
					"__set__": [
						"AssumeRole"
					]
				}
			},
			"doc_filenames": {
				"service_pages": {
					"sts": "https://docs.aws.amazon.com/code-library/latest/ug/sts_example_sts_AssumeRole_section.html"
				},
				"sdk_pages": {
					"csharp": {
						"3": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/csharp_3_sts_code_examples.html#actions"
							},
							"cross_service": null
						}
					},
					"python": {
						"3": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/python_3_sts_code_examples.html#actions"
							},
							"cross_service": null
						}
					},
					"ruby": {
						"3": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/ruby_3_sts_code_examples.html#actions"
							},
							"cross_service": null
						}
					},
					"javascript": {
						"3": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/javascript_3_sts_code_examples.html#actions"
							},
							"cross_service": null
						},
						"2": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/javascript_2_sts_code_examples.html#actions"
							},
							"cross_service": null
						}
					},
					"cpp": {
						"1": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/cpp_1_sts_code_examples.html#actions"
							},
							"cross_service": null
						}
					},
					"java": {
						"2": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/java_2_sts_code_examples.html#actions"
							},
							"cross_service": null
						}
					},
					"swift": {
						"1": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/swift_1_sts_code_examples.html#actions"
							},
							"cross_service": null
						}
					},
					"rust": {
						"1": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/rust_1_sts_code_examples.html#actions"
							},
							"cross_service": null
						}
					},
					"bash": {
						"2": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/bash_2_sts_code_examples.html#actions"
							},
							"cross_service": null
						}
					}
				}
			},
			"synopsis_list": [],
			"source_key": null
		},
		{
			"id": "sts_GetSessionToken",
			"file": "sts_metadata.yaml",
			"languages": {
				"Python": {
					"name": "Python",
					"property": "python",
					"versions": [
						{
							"sdk_version": 3,
							"block_content": null,
							"excerpts": [
								{
									"description": "Get a session token by passing an MFA token and use it to list &S3; buckets for the account.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_SessionTokenMfa_list_buckets"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "python/example_code/sts",
							"sdkguide": null,
							"more_info": []
						}
					]
				}
			},
			"title": "",
			"title_abbrev": "",
			"synopsis": "",
			"category": "Api",
			"guide_topic": null,
			"service_main": null,
			"services": {
				"sts": {
					"__set__": [
						"GetSessionToken"
					]
				}
			},
			"doc_filenames": {
				"service_pages": {
					"sts": "https://docs.aws.amazon.com/code-library/latest/ug/sts_example_sts_GetSessionToken_section.html"
				},
				"sdk_pages": {
					"python": {
						"3": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/python_3_sts_code_examples.html#actions"
							},
							"cross_service": null
						}
					}
				}
			},
			"synopsis_list": [],
			"source_key": null
		},
		{
			"id": "sts_Scenario_AssumeRoleMfa",
			"file": "sts_metadata.yaml",
			"languages": {
				"Python": {
					"name": "Python",
					"property": "python",
					"versions": [
						{
							"sdk_version": 3,
							"block_content": null,
							"excerpts": [
								{
									"description": "Create an &IAM-user;, register an MFA device, and create a role that grants permission to list S3 buckets. The user has rights only to assume the role.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_AssumeRoleMfa_setup"
									],
									"snippet_files": [],
									"genai": "none"
								},
								{
									"description": "Show that assuming the role without an MFA token is not allowed.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_AssumeRoleMfa_access_denied"
									],
									"snippet_files": [],
									"genai": "none"
								},
								{
									"description": "Assume the role that grants permission to list S3 buckets, passing the required MFA token, and show that buckets can be listed.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_AssumeRoleMfa_list_buckets"
									],
									"snippet_files": [],
									"genai": "none"
								},
								{
									"description": "Destroy the resources created for the demo.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_AssumeRoleMfa_teardown"
									],
									"snippet_files": [],
									"genai": "none"
								},
								{
									"description": "Run this scenario by using the previously defined functions.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_AssumeRoleMfa_demo"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "python/example_code/sts",
							"sdkguide": null,
							"more_info": []
						}
					]
				}
			},
			"title": "Assume an &IAM; role that requires an MFA token with &STS; using an &AWS; SDK",
			"title_abbrev": "Assume an &IAM; role that requires an MFA token",
			"synopsis": "assume a role that requires an MFA token. &aws_sec_sdk_use-federation-warning;",
			"category": "Scenarios",
			"guide_topic": null,
			"service_main": null,
			"services": {
				"sts": {
					"__set__": [
						"AssumeRole"
					]
				}
			},
			"doc_filenames": {
				"service_pages": {
					"sts": "https://docs.aws.amazon.com/code-library/latest/ug/sts_example_sts_Scenario_AssumeRoleMfa_section.html"
				},
				"sdk_pages": {
					"python": {
						"3": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/python_3_sts_code_examples.html#scenarios"
							},
							"cross_service": null
						}
					}
				}
			},
			"synopsis_list": [
				"Create an &IAM; role that grants permission to list &S3; buckets.",
				"Create an &IAM-user; that has permission to assume the role only when MFA credentials are provided.",
				"Register an MFA device for the user.",
				"Assume the role and use temporary credentials to list S3 buckets."
			],
			"source_key": null
		},
		{
			"id": "sts_Scenario_ConstructFederatedUrl",
			"file": "sts_metadata.yaml",
			"languages": {
				"Python": {
					"name": "Python",
					"property": "python",
					"versions": [
						{
							"sdk_version": 3,
							"block_content": null,
							"excerpts": [
								{
									"description": "Create a role that grants read-only access to the current account's S3 resources.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_ConstructFederatedUrl_setup"
									],
									"snippet_files": [],
									"genai": "none"
								},
								{
									"description": "Get a security token from the &AWS; federation endpoint and construct a URL that can be used to access the console with federated credentials.",
									"snippet_tags": [
										"iam.python.construct_federated_url"
									],
									"snippet_files": [],
									"genai": "none"
								},
								{
									"description": "Destroy the resources created for the demo.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_ConstructFederatedUrl_teardown"
									],
									"snippet_files": [],
									"genai": "none"
								},
								{
									"description": "Run this scenario by using the previously defined functions.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_ConstructFederatedUrl_demo"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "python/example_code/sts",
							"sdkguide": null,
							"more_info": []
						}
					]
				}
			},
			"title": "Construct a URL with &STS; for federated users using an &AWS; SDK",
			"title_abbrev": "Construct a URL for federated users",
			"synopsis": "",
			"category": "Scenarios",
			"guide_topic": null,
			"service_main": null,
			"services": {
				"sts": {
					"__set__": [
						"AssumeRole"
					]
				}
			},
			"doc_filenames": {
				"service_pages": {
					"sts": "https://docs.aws.amazon.com/code-library/latest/ug/sts_example_sts_Scenario_ConstructFederatedUrl_section.html"
				},
				"sdk_pages": {
					"python": {
						"3": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/python_3_sts_code_examples.html#scenarios"
							},
							"cross_service": null
						}
					}
				}
			},
			"synopsis_list": [
				"Create an &IAM; role that grants read-only access to the current account's &S3; resources.",
				"Get a security token from the &AWS; federation endpoint.",
				"Construct a URL that can be used to access the console with federated credentials."
			],
			"source_key": null
		},
		{
			"id": "sts_Scenario_SessionTokenMfa",
			"file": "sts_metadata.yaml",
			"languages": {
				"Python": {
					"name": "Python",
					"property": "python",
					"versions": [
						{
							"sdk_version": 3,
							"block_content": null,
							"excerpts": [
								{
									"description": "Create an &IAM-user;, register an MFA device, and create a role that grants permission to let the user list S3 buckets only when MFA credentials are used.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_SessionTokenMfa_setup"
									],
									"snippet_files": [],
									"genai": "none"
								},
								{
									"description": "Get temporary session credentials by passing an MFA token, and use the credentials to list S3 buckets for the account.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_SessionTokenMfa_list_buckets"
									],
									"snippet_files": [],
									"genai": "none"
								},
								{
									"description": "Destroy the resources created for the demo.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_SessionTokenMfa_teardown"
									],
									"snippet_files": [],
									"genai": "none"
								},
								{
									"description": "Run this scenario by using the previously defined functions.",
									"snippet_tags": [
										"python.example_code.sts.Scenario_SessionTokenMfa_demo"
									],
									"snippet_files": [],
									"genai": "none"
								}
							],
							"github": "python/example_code/sts",
							"sdkguide": null,
							"more_info": []
						}
					]
				}
			},
			"title": "Get a session token that requires an MFA token with &STS; using an &AWS; SDK",
			"title_abbrev": "Get a session token that requires an MFA token",
			"synopsis": "get a session token that requires an MFA token. &aws_sec_sdk_use-federation-warning;",
			"category": "Scenarios",
			"guide_topic": null,
			"service_main": null,
			"services": {
				"sts": {
					"__set__": [
						"GetSessionToken"
					]
				}
			},
			"doc_filenames": {
				"service_pages": {
					"sts": "https://docs.aws.amazon.com/code-library/latest/ug/sts_example_sts_Scenario_SessionTokenMfa_section.html"
				},
				"sdk_pages": {
					"python": {
						"3": {
							"actions_scenarios": {
								"sts": "https://docs.aws.amazon.com/code-library/latest/ug/python_3_sts_code_examples.html#scenarios"
							},
							"cross_service": null
						}
					}
				}
			},
			"synopsis_list": [
				"Create an &IAM; role that grants permission to list &S3; buckets.",
				"Create an &IAM-user; that has permission to assume the role only when MFA credentials are provided.",
				"Register an MFA device for the user.",
				"Provide MFA credentials to get a session token and use temporary credentials to list S3 buckets."
			],
			"source_key": null
		}
	]
}