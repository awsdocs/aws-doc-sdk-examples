# zexi 0.4.0
cloudfront_ListDistributions:
  languages:
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/cloudfront
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.cloudfront.CloudFrontWrapper
                - python.example_code.cloudfront.ListDistributions
  services:
    cloudfront: {ListDistributions}
cloudfront_GetDistributionConfig:
  languages:
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/cloudfront
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.cloudfront.CloudFrontWrapper
                - python.example_code.cloudfront.UpdateDistribution
  services:
    cloudfront: {GetDistributionConfig}
cloudfront_CreateFunction:
  languages:
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/cloudfront
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - cloudfront.java2.function.main
  services:
    cloudfront: {CreateFunction}
cloudfront_UpdateDistribution:
  languages:
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/cloudfront
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - cloudfront.java2.mod.main
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/cloudfront
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.cloudfront.CloudFrontWrapper
                - python.example_code.cloudfront.UpdateDistribution
  services:
    cloudfront: {UpdateDistribution}
cloudfront_CreateDistribution:
  languages:
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/cloudfront
          sdkguide:
          excerpts:
            - description: >-
                The following example uses an &S3long; (&S3;) bucket as a content origin.</para>
                <para>After creating the distribution, the code creates a <ulink url="https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/cloudfront/waiters/CloudFrontWaiter.html">CloudFrontWaiter</ulink>  to
                wait until the distribution is deployed before returning the distribution.
              snippet_tags:
                - cloudfront.java2.createdistribution.import
                - cloudfront.java2.createdistribution.main
  services:
    cloudfront: {CreateDistribution}
cloudfront_CreateSaasResources:
  title: Create SaaS manager resources &AWS; SDK
  title_abbrev: Create a multi-tenant distribution and distribution tenant
  synopsis: create a multi-tenant distribution and distribution tenant with various configurations.
  category: Scenarios
  languages:
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/cloudfront
          sdkguide:
          excerpts:
            - description: >-
                The following example demonstrates how to create a multi-tenant distribution with parameters and wildcard certificate.
              snippet_tags:
                - cloudfront.java2.createmultitenantdistribution.import
                - cloudfront.java2.createmultitenantdistribution.main
            - description: >-
                The following example demonstrates how to create a distribution tenant associated with that template, including utilizing the parameter we declared above.  Note that we don't need to add certificate info here because our domain is already covered by the parent template.
              snippet_tags:
                - cloudfront.java2.createdistributiontenant.import
                - cloudfront.java2.createdistributiontenant.title
                - cloudfront.java2.createdistributiontenant.nocert
                - cloudfront.java2.createdistributiontenant.closebrace
            - description: >-
                If the viewer certificate was omitted from the parent template, you would need to add certificate info on the tenant(s) associated with it instead.
                The following example demonstrates how to do so via an ACM certificate arn that covers the necessary domain for the tenant.
              snippet_tags:
                - cloudfront.java2.createdistributiontenant.import
                - cloudfront.java2.createdistributiontenant.title
                - cloudfront.java2.createdistributiontenant.withcert
                - cloudfront.java2.createdistributiontenant.closebrace
            - description: >-
                The following example demonstrates how to do so with a CloudFront-hosted managed certificate request.  This is ideal if you don't already have traffic towards your domain.
                In this case, we create a ConnectionGroup to generate a RoutingEndpoint.  Then we use that RoutingEndpoint to create DNS records which verify domain ownership and point to CloudFront. CloudFront will then automatically serve a token to validate domain ownership and create a managed certificate.
              snippet_tags:
                - cloudfront.java2.createdistributiontenant.import
                - cloudfront.java2.createdistributiontenant.title
                - cloudfront.java2.createdistributiontenant.cfhosted
                - cloudfront.java2.createdistributiontenant.closebrace
            - description: >-
                The following example demonstrates how to do so with a self-hosted managed certificate request.  This is ideal if you have traffic towards your domain and can't tolerate downtime during a migration.
                At the end of this example, the Tenant will be created in a state awaiting domain validation and DNS setup.  Follow steps [here](https://docs.aws.amazon.com/AmazonCloudFront/latest/DeveloperGuide/managed-cloudfront-certificates.html#complete-domain-ownership) to complete setup when you are ready to migrate traffic.
              snippet_tags:
                - cloudfront.java2.createdistributiontenant.import
                - cloudfront.java2.createdistributiontenant.title
                - cloudfront.java2.createdistributiontenant.selfhosted
                - cloudfront.java2.createdistributiontenant.closebrace
  services:
    cloudfront: {CreateDistribution, CreateDistributionTenant}
cloudfront_CreateKeyGroup:
  languages:
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/cloudfront
          sdkguide:
          excerpts:
            - description: A key group requires at least one public key that is used to verify signed URLs or cookies.
              snippet_tags:
                - cloudfront.java2.createkeygroup.import
                - cloudfront.java2.createkeygroup.main
  services:
    cloudfront: {CreateKeyGroup}
cloudfront_CreatePublicKey:
  languages:
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/cloudfront
          sdkguide:
          excerpts:
            - description: The following code example reads in a public key and uploads it to &CFlong;.
              snippet_tags:
                - cloudfront.java2.createpublickey.import
                - cloudfront.java2.createpublickey.main
  services:
    cloudfront: {CreatePublicKey}
cloudfront_DeleteDistribution:
  languages:
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/cloudfront
          sdkguide:
          excerpts:
            - description: The following code example updates a distribution to <emphasis>disabled</emphasis>, uses a waiter
                that waits for the change to be deployed, then deletes the distribution.
              snippet_tags:
                - cloudfront.java2.deletedistribution.import
                - cloudfront.java2.deletedistribution.main
  services:
    cloudfront: {DeleteDistribution}
cloudfront_DeleteSigningResources:
  title: Delete &CF; signing resources using &AWS; SDK
  title_abbrev: Delete signing resources
  synopsis: delete resources that are used to gain access to restricted content in an &S3long; (&S3;) bucket.
  category: Scenarios
  languages:
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/cloudfront
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - cloudfront.java2.deletedistributionresources.import
                - cloudfront.java2.deletedistributionresources.main
  services:
    cloudfront: {DeleteKeyGroup, DeletePublicKey, DeleteOriginAccessControl}
cloudfront_CloudFrontUtilities:
  title: Create signed URLs and cookies using an &AWS; SDK
  title_abbrev: Sign URLs and cookies
  synopsis: create signed URLs and cookies that allow access to restricted resources.
  category: Scenarios
  languages:
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/cloudfront
          sdkguide:
          excerpts:
            - description: >-
                Use the <ulink url="https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/cloudfront/model/CannedSignerRequest.html">CannedSignerRequest</ulink>

                        class to sign URLs or cookies with a <emphasis>canned</emphasis> policy.
              snippet_tags:
                - cloudfront.java2.createcannedpolicyrequest.import
                - cloudfront.java2.createcannedpolicyrequest.main
            - description: >-
                Use the <ulink url="https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/cloudfront/model/CustomSignerRequest.html">CustomSignerRequest</ulink> class
                to sign URLs or cookies with a <emphasis>custom</emphasis> policy. The <code>activeDate</code> and <code>ipRange</code>
                are optional methods.
              snippet_tags:
                - cloudfront.java2.createcustompolicyrequest.import
                - cloudfront.java2.createcustompolicyrequest.main
            - description: >-
                The following example demonstrates the use of the <ulink url="https://sdk.amazonaws.com/java/api/latest/software/amazon/awssdk/services/cloudfront/CloudFrontUtilities.html">CloudFrontUtilities</ulink> class
                to produce signed cookies and URLs. <ulink url="https://github.com/awsdocs/aws-doc-sdk-examples/blob/main/javav2/example_code/cloudfront/src/main/java/com/example/cloudfront/SigningUtilities.java">View</ulink>
                this code example on GitHub.
              snippet_tags:
                - cloudfront.java2.signingutilities.import
                - cloudfront.java2.signingutilities.main
  services:
    cloudfront: {CloudFrontUtilities}
