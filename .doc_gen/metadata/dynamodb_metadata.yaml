# zexi 0.4.0
dynamodb_Hello:
  title: Hello &DDB;
  title_abbrev: Hello &DDB;
  synopsis: get started using &DDB;.
  category: Hello
  languages:
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.java2.list_tables.main
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - DynamoDB.dotnetv3.HelloDynamoDB
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: >-
                For more details on working with &DDB; in &JSBlong;, 
                see <ulink url="https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/programming-with-javascript.html">Programming &DDB; with JavaScript</ulink>.
              snippet_tags:
                - javascript.v3.dynamodb.hello
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb/hello_dynamodb
          excerpts:
            - description: Code for the CMakeLists.txt CMake file.
              snippet_tags:
                - cpp.example_code.dynamodb.hello_dynamodb.cmake
            - description: Code for the hello_dynamodb.cpp source file.
              snippet_tags:
                - cpp.example_code.dynamodb.hello_dynamodb
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - python.dynamodb.hello_dynamodb
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ruby.dynamodb.hello_dynamodb
  services:
    dynamodb: {ListTables}
dynamodb_CreateTable:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.CreateTable
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.cpp.create_table.code
            - description: Code that waits for the table to become active.
              snippet_tags:
                - cpp.example_code.dynamodb.scenario.waitTableActive

    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - gov2.dynamodb.TableBasics.struct
                - gov2.dynamodb.CreateTable
    Kotlin:
      versions:
        - sdk_version: 1
          github: kotlin/services/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.kotlin.create_table.main
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.java2.create_table.main
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description: Create a table.
              snippet_tags:
                - php.example_code.dynamodb.basics.createTable
                - php.example_code.dynamodb.service.createTable
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Create a table for storing movie data.
              snippet_tags:
                - python.example_code.dynamodb.helper.Movies.class_decl
                - python.example_code.dynamodb.CreateTable
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ruby.example_code.dynamodb.Scaffold
                - ruby.example_code.dynamodb.CreateTable
    Rust:
      versions:
        - sdk_version: 1
          github: rustv1/examples/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.rust.create-table
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          sdkguide: 
            sdk-for-javascript/v3/developer-guide/dynamodb-examples-using-tables.html#dynamodb-examples-using-tables-creating-a-table
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.JavaScript.table.createTableV3
        - sdk_version: 2
          github: javascript/example_code/dynamodb
          sdkguide: 
            sdk-for-javascript/v2/developer-guide/dynamodb-examples-using-tables.html#dynamodb-examples-using-tables-creating-a-table
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.JavaScript.table.createTable
    SAP ABAP:
      versions:
        - sdk_version: 1
          github: sap-abap/services/dyn
          excerpts:
            - description:
              snippet_tags:
                - dyn.abapv1.create_table
    Swift:
      versions:
        - sdk_version: 1
          github: swift/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ddb.swift.import
                - ddb.swift.basics.createtable
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.CreateTable
            - description: The utility functions used in this example.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.iecho
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {CreateTable}
dynamodb_BatchGetItem:
  languages:
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          excerpts:
            - description: shows how to get batch items using the service client.
              snippet_tags:
                - dynamodb.java2.batch.get.items.main
            - description: shows how to get batch items using the service client and a paginator.
              snippet_tags:
                - dynamodb.java2.batch.get.items.paginator.main
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.dotnetv3.LowLevelBatchGetExample
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.dynamodb.Batching_imports
                - python.example_code.dynamodb.BatchGetItem
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          sdkguide: 
            sdk-for-javascript/v3/developer-guide/dynamodb-example-table-read-write-batch.html#dynamodb-example-table-read-write-batch-reading
          excerpts:
            - description: This example uses the document client to simplify working with items in &DDB;. For API details
                see <ulink type="documentation" url="AWSJavaScriptSDK/v3/latest/Package/-aws-sdk-lib-dynamodb/Class/BatchGetCommand/">BatchGet</ulink>.
              snippet_tags:
                - javascript.v3.dynamodb.doc-client.BatchGet
        - sdk_version: 2
          github: javascript/example_code/dynamodb
          sdkguide: 
            sdk-for-javascript/v2/developer-guide/dynamodb-example-table-read-write-batch.html#dynamodb-example-table-read-write-batch-reading
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.JavaScript.batch.GetItem
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - cpp.example_code.dynamodb.batch_get_item
    Swift:
      versions:
        - sdk_version: 1
          github: swift/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ddb.swift.import
                - ddb.swift.batchgetitem.batchget
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.BatchGetItem
            - description: The utility functions used in this example.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {BatchGetItem}
dynamodb_DescribeTable:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.dotnetv3.DescribeTableExample
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.java2.describe_table.main
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.cpp.describe_table.code
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - gov2.dynamodb.TableBasics.struct
                - gov2.dynamodb.DescribeTable
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          sdkguide: 
            sdk-for-javascript/v3/developer-guide/dynamodb-examples-using-tables.html#dynamodb-examples-using-tables-describing-a-table
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.JavaScript.table.describeTableV3
        - sdk_version: 2
          github: javascript/example_code/dynamodb
          sdkguide: 
            sdk-for-javascript/v2/developer-guide/dynamodb-examples-using-tables.html#dynamodb-examples-using-tables-describing-a-table
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.JavaScript.table.describeTable
    SAP ABAP:
      versions:
        - sdk_version: 1
          github: sap-abap/services/dyn
          excerpts:
            - description:
              snippet_tags:
                - dyn.abapv1.describe_table
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.dynamodb.helper.Movies.class_decl
                - python.example_code.dynamodb.DescribeTable
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ruby.example_code.dynamodb.Scaffold
                - ruby.example_code.dynamodb.DescribeTable
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.DescribeTable
            - description: The utility functions used in this example.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {DescribeTable}
dynamodb_BatchWriteItem:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description: Writes a batch of items to the movie table.
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.BatchWriteItem
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - gov2.dynamodb.TableBasics.struct
                - gov2.dynamodb.BatchWriteItem
                - gov2.dynamodb.Movie.struct
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb/
          sdkguide:
          excerpts:
            - description: Inserts many items into a table by using the service client.
              snippet_tags:
                - dynamodb.java2.batch.write.items.main
            - description: Inserts many items into a table by using the enhanced client.
              snippet_tags:
                - dynamodb.java2.mapping.batchitems.main
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.service.batchWriteItem
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.dynamodb.helper.Movies.class_decl
                - python.example_code.dynamodb.BatchWriteItem
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          excerpts:
            - description: This example uses the document client to simplify working with items in &DDB;. For API details
                see <ulink type="documentation" url="AWSJavaScriptSDK/v3/latest/Package/-aws-sdk-lib-dynamodb/Class/BatchWriteCommand/">BatchWrite</ulink>.
              snippet_tags:
                - dynamodb.JavaScript.movies.batchwriteV3
        - sdk_version: 2
          github: javascript/example_code/dynamodb
          sdkguide: 
            sdk-for-javascript/v2/developer-guide/dynamodb-example-table-read-write-batch.html#dynamodb-example-table-read-write-batch-writing
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.JavaScript.batch.WriteItem
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBBasics.decl
                - ruby.example_code.dynamodb.BatchWriteItem
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - cpp.example_code.dynamodb.batch_write_item
    Swift:
      versions:
        - sdk_version: 1
          github: swift/example_code/dynamodb/
          excerpts:
            - description:
              snippet_tags:
                - ddb.swift.import
                - ddb.swift.basics.populate
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.BatchWriteItem
            - description: The utility functions used in this example.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.iecho
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {BatchWriteItem}
dynamodb_DeleteTable:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.DeleteTableExample
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.cpp.delete_table.code
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - gov2.dynamodb.TableBasics.struct
                - gov2.dynamodb.DeleteTable
    Kotlin:
      versions:
        - sdk_version: 1
          github: kotlin/services/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.kotlin.delete_table.main
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.java2.delete_table.main
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.service.deleteTable
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.dynamodb.helper.Movies.class_decl
                - python.example_code.dynamodb.DeleteTable
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ruby.example_code.dynamodb.Scaffold
                - ruby.example_code.dynamodb.DeleteTable
    Rust:
      versions:
        - sdk_version: 1
          github: rustv1/examples/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.rust.delete-table
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.JavaScript.item.deleteTableV3
        - sdk_version: 2
          github: javascript/example_code/dynamodb
          sdkguide: 
            sdk-for-javascript/v2/developer-guide/dynamodb-examples-using-tables.html#dynamodb-examples-using-tables-deleting-a-table
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.JavaScript.table.deleteTable
    SAP ABAP:
      versions:
        - sdk_version: 1
          github: sap-abap/services/dyn
          excerpts:
            - description:
              snippet_tags:
                - dyn.abapv1.delete_table
    Swift:
      versions:
        - sdk_version: 1
          github: swift/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ddb.swift.import
                - ddb.swift.basics.deletetable
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.DeleteTable
            - description: The utility functions used in this example.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.iecho
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {DeleteTable}
dynamodb_PutItem:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.PutItem
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.cpp.put_item.code
            - description: Code that waits for the table to become active.
              snippet_tags:
                - cpp.example_code.dynamodb.scenario.waitTableActive
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - gov2.dynamodb.TableBasics.struct
                - gov2.dynamodb.PutItem
                - gov2.dynamodb.Movie.struct
    Kotlin:
      versions:
        - sdk_version: 1
          github: kotlin/services/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.kotlin.put_item.main
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Puts an item into a table using <ulink 
                url="http://docs.aws.amazon.com/sdk-for-java/latest/reference/software/amazon/awssdk/services/dynamodb/DynamoDbClient.html">DynamoDbClient</ulink>.
              snippet_tags:
                - dynamodb.java2.put_item.main
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.basics.putItem
                - php.example_code.dynamodb.service.putItem
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.dynamodb.helper.Movies.class_decl
                - python.example_code.dynamodb.PutItem
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBBasics.decl
                - ruby.example_code.dynamodb.PutItem
    Rust:
      versions:
        - sdk_version: 1
          github: rustv1/examples/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.rust.add-item
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          excerpts:
            - description: This example uses the document client to simplify working with items in &DDB;. For API details
                see <ulink type="documentation" url="AWSJavaScriptSDK/v3/latest/Package/-aws-sdk-lib-dynamodb/Class/PutCommand/">PutCommand</ulink>.
              snippet_tags:
                - dynamodb.JavaScript.docClient.putV3
        - sdk_version: 2
          github: javascript/example_code/dynamodb
          sdkguide: 
            sdk-for-javascript/v2/developer-guide/dynamodb-example-table-read-write.html#dynamodb-example-table-read-write-writing-an-item
          excerpts:
            - description: Put an item in a table.
              snippet_tags:
                - dynamodb.JavaScript.item.putItem
            - description: Put an item in a table using the &DDB; document client.
              snippet_tags:
                - dynamodb.JavaScript.docClient.put
    SAP ABAP:
      versions:
        - sdk_version: 1
          github: sap-abap/services/dyn
          excerpts:
            - description:
              snippet_tags:
                - dyn.abapv1.put_item
    Swift:
      versions:
        - sdk_version: 1
          github: swift/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ddb.swift.import
                - ddb.swift.basics.add-movie
                - ddb.swift.basics.movie.getasitem
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.PutItem
            - description: The utility functions used in this example.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.iecho
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {PutItem}
dynamodb_GetItem:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.GetItem
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.cpp.get_item.code
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - gov2.dynamodb.TableBasics.struct
                - gov2.dynamodb.GetItem
                - gov2.dynamodb.Movie.struct
    Kotlin:
      versions:
        - sdk_version: 1
          github: kotlin/services/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.kotlin.get_item.main
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Gets an item from a table by using the DynamoDbClient.
              snippet_tags:
                - dynamodb.java2.get_item.main
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.basics.getItem
                - php.example_code.dynamodb.service.getItem
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.dynamodb.helper.Movies.class_decl
                - python.example_code.dynamodb.GetItem
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBBasics.decl
                - ruby.example_code.dynamodb.GetItem
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          excerpts:
            - description: This example uses the document client to simplify working with items in &DDB;. For API details
                see <ulink type="documentation" url="AWSJavaScriptSDK/v3/latest/Package/-aws-sdk-lib-dynamodb/Class/GetCommand/">GetCommand</ulink>.
              snippet_tags:
                - dynamodb.JavaScript.docClient.getV3
        - sdk_version: 2
          github: javascript/example_code/dynamodb
          sdkguide: sdk-for-javascript/v2/developer-guide/dynamodb-example-dynamodb-utilities.html#dynamodb-example-document-client-get
          excerpts:
            - description: Get an item from a table.
              snippet_tags:
                - dynamodb.JavaScript.item.getItem
            - description: Get an item from a table using the &DDB; document client.
              snippet_tags:
                - dynamodb.JavaScript.docClient.get
    SAP ABAP:
      versions:
        - sdk_version: 1
          github: sap-abap/services/dyn
          excerpts:
            - description:
              snippet_tags:
                - dyn.abapv1.get_item
    Swift:
      versions:
        - sdk_version: 1
          github: swift/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ddb.swift.import
                - ddb.swift.basics.get
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.GetItem
            - description: The utility functions used in this example.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {GetItem}
dynamodb_UpdateItem:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.UpdateItem
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.cpp.update_item.code
            - description: Code that waits for the table to become active.
              snippet_tags:
                - cpp.example_code.dynamodb.scenario.waitTableActive
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - gov2.dynamodb.TableBasics.struct
                - gov2.dynamodb.UpdateItem
                - gov2.dynamodb.Movie.struct
    Kotlin:
      versions:
        - sdk_version: 1
          github: kotlin/services/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.kotlin.update_item.main
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Updates an item in a table using <ulink 
                url="http://docs.aws.amazon.com/sdk-for-java/latest/reference/software/amazon/awssdk/services/dynamodb/DynamoDbClient.html">DynamoDbClient</ulink>.
              snippet_tags:
                - dynamodb.java2.update_item.main
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.basics.updateItem
                - php.example_code.dynamodb.service.updateItem
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Update an item by using an update expression.
              snippet_tags:
                - python.example_code.dynamodb.helper.Movies.class_decl
                - python.example_code.dynamodb.UpdateItem.UpdateExpression
            - description: Update an item by using an update expression that includes an arithmetic operation.
              snippet_tags:
                - python.example_code.dynamodb.helper.UpdateQueryWrapper.decl
                - python.example_code.dynamodb.UpdateItem.UpdateExpression.Arithmetic
            - description: Update an item only when it meets certain conditions.
              snippet_tags:
                - python.example_code.dynamodb.helper.UpdateQueryWrapper.decl
                - python.example_code.dynamodb.UpdateItem.ConditionalExpression
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBBasics.decl
                - ruby.example_code.dynamodb.UpdateItem.UpdateExpression
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          excerpts:
            - description: This example uses the document client to simplify working with items in &DDB;. For API details
                see <ulink type="documentation" url="AWSJavaScriptSDK/v3/latest/Package/-aws-sdk-lib-dynamodb/Class/UpdateCommand/">UpdateCommand</ulink>.
              snippet_tags:
                - dynamodb.JavaScript.docClient.updateV3
    SAP ABAP:
      versions:
        - sdk_version: 1
          github: sap-abap/services/dyn
          excerpts:
            - description:
              snippet_tags:
                - dyn.abapv1.update_item
    Swift:
      versions:
        - sdk_version: 1
          github: swift/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ddb.swift.import
                - ddb.swift.basics.update
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.UpdateItem
            - description: The utility functions used in this example.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.iecho
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {UpdateItem}
dynamodb_DeleteItem:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.DeleteItem
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - gov2.dynamodb.TableBasics.struct
                - gov2.dynamodb.DeleteItem
                - gov2.dynamodb.Movie.struct
    Kotlin:
      versions:
        - sdk_version: 1
          github: kotlin/services/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.kotlin.delete_item.main
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.java2.delete_item.main
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.basics.key
                - php.example_code.dynamodb.basics.deleteItem
                - php.example_code.dynamodb.service.deleteItem
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.dynamodb.helper.Movies.class_decl
                - python.example_code.dynamodb.DeleteItem
            - description: You can specify a condition so that an item is deleted only when it meets certain criteria.
              snippet_tags:
                - python.example_code.dynamodb.helper.UpdateQueryWrapper.decl
                - python.example_code.dynamodb.DeleteItem.ConditionExpression
    Rust:
      versions:
        - sdk_version: 1
          github: rustv1/examples/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.rust.delete-item
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBBasics.decl
                - ruby.example_code.dynamodb.DeleteItem
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          sdkguide: 
            sdk-for-javascript/v3/developer-guide/dynamodb-example-table-read-write.html#dynamodb-example-table-read-write-deleting-an-item
          excerpts:
            - description: This example uses the document client to simplify working with items in &DDB;. For API details
                see <ulink type="documentation" url="AWSJavaScriptSDK/v3/latest/Package/-aws-sdk-lib-dynamodb/Class/DeleteCommand/">DeleteCommand</ulink>.
              snippet_tags:
                - dynamodb.JavaScript.docClient.deleteV3
        - sdk_version: 2
          github: javascript/example_code/dynamodb
          sdkguide: 
            sdk-for-javascript/v2/developer-guide/dynamodb-example-table-read-write.html#dynamodb-example-table-read-write-deleting-an-item
          excerpts:
            - description: Delete an item from a table.
              snippet_tags:
                - dynamodb.JavaScript.item.deleteItem
            - description: Delete an item from a table using the &DDB; document client.
              snippet_tags:
                - dynamodb.JavaScript.docClient.delete
    SAP ABAP:
      versions:
        - sdk_version: 1
          github: sap-abap/services/dyn
          excerpts:
            - description:
              snippet_tags:
                - dyn.abapv1.delete_item
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - cpp.example_code.dynamodb.delete_item
            - description: Code that waits for the table to become active.
              snippet_tags:
                - cpp.example_code.dynamodb.scenario.waitTableActive
    Swift:
      versions:
        - sdk_version: 1
          github: swift/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ddb.swift.import
                - ddb.swift.basics.delete
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.DeleteItem
            - description: The utility functions used in this example.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.iecho
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {DeleteItem}
dynamodb_ListTables:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.dotnetv3.ListTableExample
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.cpp.list_tables.code
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - gov2.dynamodb.TableBasics.struct
                - gov2.dynamodb.ListTables
    Kotlin:
      versions:
        - sdk_version: 1
          github: kotlin/services/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.kotlin.list_tables.main
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.java2.list_tables.main
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.service.listTables
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.dynamodb.helper.Movies.class_decl
                - python.example_code.dynamodb.ListTables
    Ruby:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Determine whether a table exists.
              snippet_tags:
                - ruby.example_code.dynamodb.Scaffold
                - ruby.example_code.dynamodb.DescribeTable
    Rust:
      versions:
        - sdk_version: 1
          github: rustv1/examples/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.rust.list-tables
            - description: Determine whether table exists.
              snippet_tags:
                - dynamodb.rust.movies-does_table_exist
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          sdkguide: sdk-for-javascript/v3/developer-guide/dynamodb-examples-using-tables.html#dynamodb-examples-using-tables-listing-tables
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.JavaScript.table.listTablesV3
        - sdk_version: 2
          github: javascript/example_code/dynamodb
          sdkguide: sdk-for-javascript/v2/developer-guide/dynamodb-examples-using-tables.html#dynamodb-examples-using-tables-listing-tables
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.JavaScript.table.listTables
    SAP ABAP:
      versions:
        - sdk_version: 1
          github: sap-abap/services/dyn
          excerpts:
            - description:
              snippet_tags:
                - dyn.abapv1.list_tables
    Swift:
      versions:
        - sdk_version: 1
          github: swift/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ddb.swift.import
                - ddb.swift.databasemanager.gettablelist
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.ListTables
            - description: The utility functions used in this example.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {ListTables}
dynamodb_Query:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.QueryItems
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.cpp.query_items.code
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - gov2.dynamodb.TableBasics.struct
                - gov2.dynamodb.Query
                - gov2.dynamodb.Movie.struct
    Kotlin:
      versions:
        - sdk_version: 1
          github: kotlin/services/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.kotlin.query.main
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Queries a table by using <ulink 
                url="http://docs.aws.amazon.com/sdk-for-java/latest/reference/software/amazon/awssdk/services/dynamodb/DynamoDbClient.html">DynamoDbClient</ulink>.
              snippet_tags:
                - dynamodb.java2.query.main
            - description: Queries a table by using <code>DynamoDbClient</code> and a secondary index.
              snippet_tags:
                - dynamodb.java2.query_items_sec_index.main
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.basics.query
                - php.example_code.dynamodb.service.query
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Query items by using a key condition expression.
              snippet_tags:
                - python.example_code.dynamodb.helper.Movies.class_decl
                - python.example_code.dynamodb.Query
            - description: Query items and project them to return a subset of data.
              snippet_tags:
                - python.example_code.dynamodb.helper.UpdateQueryWrapper.decl
                - python.example_code.dynamodb.Query.ProjectionExpression
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBBasics.decl
                - ruby.example_code.dynamodb.Query
    Rust:
      versions:
        - sdk_version: 1
          github: rustv1/examples/dynamodb
          excerpts:
            - description: Find the movies made in the specified year.
              snippet_tags:
                - dynamodb.rust.movies-movies_in_year
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          sdkguide: sdk-for-javascript/v3/developer-guide/dynamodb-example-query-scan.html#dynamodb-example-table-query-scan-querying
          excerpts:
            - description: This example uses the document client to simplify working with items in &DDB;. For API details
                see <ulink type="documentation" url="AWSJavaScriptSDK/v3/latest/Package/-aws-sdk-lib-dynamodb/Class/QueryCommand/">QueryCommand</ulink>.
              snippet_tags:
                - dynamodb.JavaScript.docClient.queryV3
        - sdk_version: 2
          github: javascript/example_code/dynamodb
          sdkguide: sdk-for-javascript/v2/developer-guide/dynamodb-example-query-scan.html#dynamodb-example-table-query-scan-querying
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.JavaScript.docClient.query
    SAP ABAP:
      versions:
        - sdk_version: 1
          github: sap-abap/services/dyn
          excerpts:
            - description:
              snippet_tags:
                - dyn.abapv1.query_table
    Swift:
      versions:
        - sdk_version: 1
          github: swift/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ddb.swift.import
                - ddb.swift.basics.getMovies-year
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.Query
            - description: The utility functions used in this example.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {Query}
dynamodb_Scan:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.ScanTable
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.cpp.scan_table.code
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - gov2.dynamodb.TableBasics.struct
                - gov2.dynamodb.Scan
                - gov2.dynamodb.Movie.struct
    Kotlin:
      versions:
        - sdk_version: 1
          github: kotlin/services/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.kotlin.scan_items.main
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Scans an Amazon DynamoDB table using <ulink 
                url="http://docs.aws.amazon.com/sdk-for-java/latest/reference/software/amazon/awssdk/services/dynamodb/DynamoDbClient.html">DynamoDbClient</ulink>.
              snippet_tags:
                - dynamodb.java2.dynamoDB_scan.main
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.basics.scan
                - php.example_code.dynamodb.service.scan
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.dynamodb.helper.Movies.class_decl
                - python.example_code.dynamodb.Scan
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBBasics.decl
                - ruby.example_code.dynamodb.Scan
    Rust:
      versions:
        - sdk_version: 1
          github: rustv1/examples/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.rust.list-items
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          excerpts:
            - description: This example uses the document client to simplify working with items in &DDB;. For API details
                see <ulink type="documentation" url="AWSJavaScriptSDK/v3/latest/Package/-aws-sdk-lib-dynamodb/Class/ScanCommand/">ScanCommand</ulink>.
              snippet_tags:
                - dynamodb.JavaScript.movies.scanV3
        - sdk_version: 2
          github: javascript/example_code/dynamodb
          sdkguide: sdk-for-javascript/v2/developer-guide/dynamodb-example-query-scan.html#dynamodb-example-table-query-scan-scanning
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.JavaScript.table.scan
    SAP ABAP:
      versions:
        - sdk_version: 1
          github: sap-abap/services/dyn
          excerpts:
            - description:
              snippet_tags:
                - dyn.abapv1.scan_items
    Swift:
      versions:
        - sdk_version: 1
          github: swift/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - ddb.swift.import
                - ddb.swift.basics.getmovies-range
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.Scan
            - description: The utility functions used in this example.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {Scan}
dynamodb_ExecuteStatement:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description: Use an INSERT statement to add an item.
              snippet_tags:
                - PartiQL.dotnetv3.PartiQLBasicsScenario-InsertSingleMovie
            - description: Use a SELECT statement to get an item.
              snippet_tags:
                - PartiQL.dotnetv3.PartiQLBasicsScenario-GetSingleMovie
            - description: Use a SELECT statement to get a list of items.
              snippet_tags:
                - PartiQL.dotnetv3.PartiQLBasicsScenario-GetMovies
            - description: Use an UPDATE statement to update an item.
              snippet_tags:
                - PartiQL.dotnetv3.PartiQLBasicsScenario-UpdateSingleMovie
            - description: Use a DELETE statement to delete a single movie.
              snippet_tags:
                - PartiQL.dotnetv3.PartiQLBasicsScenario-DeleteSingleMovie
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description: Use an INSERT statement to add an item.
              snippet_tags:
                - gov2.dynamodb.ExecuteStatement.Insert
            - description: Use a SELECT statement to get an item.
              snippet_tags:
                - gov2.dynamodb.ExecuteStatement.Select
            - description: Use a SELECT statement to get a list of items and project the results.
              snippet_tags:
                - gov2.dynamodb.ExecuteStatement.Select.Projected
            - description: Use an UPDATE statement to update an item.
              snippet_tags:
                - gov2.dynamodb.ExecuteStatement.Update
            - description: Use a DELETE statement to delete an item.
              snippet_tags:
                - gov2.dynamodb.ExecuteStatement.Delete
            - description: Define a Movie struct that is used in this example.
              snippet_tags:
                - gov2.dynamodb.Movie.struct
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          excerpts:
            - description: Create an item using PartiQL.
              snippet_tags:
                - dynamodb.JavaScript.partiQL.putItemV3
            - description: Get an item using PartiQL.
              snippet_tags:
                - dynamodb.JavaScript.partiQL.getItemV3
            - description: Update an item using PartiQL.
              snippet_tags:
                - dynamodb.JavaScript.partiQL.updateItemV3
            - description: Delete an item using PartiQL.
              snippet_tags:
                - dynamodb.JavaScript.partiQL.deleteItemV3
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.service.insertItemByPartiQL
                - php.example_code.dynamodb.service.getItemByPartiQL
                - php.example_code.dynamodb.service.updateItemByPartiQL
                - php.example_code.dynamodb.service.deleteItemByPartiQL
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.dynamodb.helper.PartiQLWrapper.class_decl
                - python.example_code.dynamodb.ExecuteStatement
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Select a single item using PartiQL.
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBPartiQLSingle.decl
                - ruby.example_code.dynamodb.partiql.single_select
            - description: Update a single item using PartiQL.
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBPartiQLSingle.decl
                - ruby.example_code.dynamodb.partiql.single_update
            - description: Add a single item using PartiQL.
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBPartiQLSingle.decl
                - ruby.example_code.dynamodb.partiql.single_insert
            - description: Delete a single item using PartiQL.
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBPartiQLSingle.decl
                - ruby.example_code.dynamodb.partiql.single_delete
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          excerpts:
            - description: Use an INSERT statement to add an item.
              snippet_tags:
                - cpp.example_code.dynamodb.ExecuteStatement.Insert
            - description: Use a SELECT statement to get an item.
              snippet_tags:
                - cpp.example_code.dynamodb.ExecuteStatement.Select
            - description: Use an UPDATE statement to update an item.
              snippet_tags:
                - cpp.example_code.dynamodb.ExecuteStatement.Update
            - description: Use a DELETE statement to delete an item.
              snippet_tags:
                - cpp.example_code.dynamodb.ExecuteStatement.Delete
  services:
    dynamodb: {ExecuteStatement}
dynamodb_BatchExecuteStatement:
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description: Use batches of INSERT statements to add items.
              snippet_tags:
                - PartiQL.dotnetv3.PartiQLBatchScenario-InsertMovies
            - description: Use batches of SELECT statements to get items.
              snippet_tags:
                - PartiQL.dotnetv3.PartiQLBatchScenario-GetBatch
            - description: Use batches of UPDATE statements to update items.
              snippet_tags:
                - PartiQL.dotnetv3.PartiQLBatchScenario-UpdateBatch
            - description: Use batches of DELETE statements to delete items.
              snippet_tags:
                - PartiQL.dotnetv3.PartiQLBatchScenario-DeleteBatch
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description: Use batches of INSERT statements to add items.
              snippet_tags:
                - gov2.dynamodb.BatchExecuteStatement.Insert
            - description: Use batches of SELECT statements to get items.
              snippet_tags:
                - gov2.dynamodb.BatchExecuteStatement.Select
            - description: Use batches of UPDATE statements to update items.
              snippet_tags:
                - gov2.dynamodb.BatchExecuteStatement.Update
            - description: Use batches of DELETE statements to delete items.
              snippet_tags:
                - gov2.dynamodb.BatchExecuteStatement.Delete
            - description: Define a Movie struct that is used in this example.
              snippet_tags:
                - gov2.dynamodb.Movie.struct
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          excerpts:
            - description: Create a batch of items using PartiQL.
              snippet_tags:
                - dynamodb.JavaScript.partiQL.putItemsV3
            - description: Get a batch of items using PartiQL.
              snippet_tags:
                - dynamodb.JavaScript.partiQL.getItemsV3
            - description: Update a batch of items using PartiQL.
              snippet_tags:
                - dynamodb.JavaScript.partiQL.updateItemsV3
            - description: Delete a batch of items using PartiQL.
              snippet_tags:
                - dynamodb.JavaScript.partiQL.deleteItemsV3
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.service.getItemByPartiQLBatch
                - php.example_code.dynamodb.service.insertItemByPartiQLBatch
                - php.example_code.dynamodb.service.updateItemByPartiQLBatch
                - php.example_code.dynamodb.service.deleteItemByPartiQLBatch
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - python.example_code.dynamodb.helper.PartiQLBatchWrapper.class_decl
                - python.example_code.dynamodb.BatchExecuteStatement
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Read a batch of items using PartiQL.
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBPartiQLBatch.decl
                - ruby.example_code.dynamodb.partiql.batch_read
            - description: Delete a batch of items using PartiQL.
              snippet_tags:
                - ruby.example_code.ruby.DynamoDBPartiQLBatch.decl
                - ruby.example_code.dynamodb.partiql.batch_write
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          excerpts:
            - description: Use batches of INSERT statements to add items.
              snippet_tags:
                - cpp.example_code.dynamodb.BatchExecuteStatement.Insert
            - description: Use batches of SELECT statements to get items.
              snippet_tags:
                - cpp.example_code.dynamodb.BatchExecuteStatement.Select
            - description: Use batches of UPDATE statements to update items.
              snippet_tags:
                - cpp.example_code.dynamodb.BatchExecuteStatement.Update
            - description: Use batches of DELETE statements to delete items.
              snippet_tags:
                - cpp.example_code.dynamodb.BatchExecuteStatement.Delete
  services:
    dynamodb: {BatchExecuteStatement}
dynamodb_UpdateTable:
  languages:
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.cpp.update_table.code
            - description: Code that waits for the table to become active.
              snippet_tags:
                - cpp.example_code.dynamodb.scenario.waitTableActive
  services:
    dynamodb: {UpdateTable}
dynamodb_Usage_DaxDemo:
  title: Accelerate &DDB; reads with &DAX; using an &AWS; SDK
  title_abbrev: Accelerate reads with &DAX;
  synopsis_list:
    - Create and write data to a table with both the &DAX; and SDK clients.
    - Get, query, and scan the table with both clients and compare their performance.
  guide_topic:
    title: Developing with the &DAXlong; Client
    url: amazondynamodb/latest/developerguide/DAX.client.html
  category: Scenarios
  languages:
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb/TryDax
          sdkguide:
          excerpts:
            - description: Create a table with either the &DAX; or Boto3 client.
              snippet_tags:
                - dynamodb.Python.TryDax.01-create-table
            - description: Write test data to the table.
              snippet_tags:
                - dynamodb.Python.TryDax.02-write-data
            - description: Get items for a number of iterations for both the &DAX; client and the Boto3 client and report
                the time spent for each.
              snippet_tags:
                - dynamodb.Python.TryDax.03-getitem-test
            - description: Query the table for a number of iterations for both the &DAX; client and the Boto3 client and report
                the time spent for each.
              snippet_tags:
                - dynamodb.Python.TryDax.04-query-test
            - description: Scan the table for a number of iterations for both the &DAX; client and the Boto3 client and report
                the time spent for each.
              snippet_tags:
                - dynamodb.Python.TryDax.05-scan-test
            - description: Delete the table.
              snippet_tags:
                - dynamodb.Python.TryDax.06-delete-table
  services:
    dynamodb: {CreateTable, PutItem, GetItem, Query, Scan, DeleteTable}
dynamodb_Scenario_GettingStartedMovies:
  synopsis_list:
    - Create a table that can hold movie data.
    - Put, get, and update a single movie in the table.
    - Write movie data to the table from a sample JSON file.
    - Query for movies that were released in a given year.
    - Scan for movies that were released in a range of years.
    - Delete a movie from the table, then delete the table.
  category: Basics
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - DynamoDB.dotnetv3.DynamoDB_Basics_Scenario
            - description: Creates a table to contain movie data.
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.CreateTable
            - description: Adds a single movie to the table.
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.PutItem
            - description: Updates a single item in a table.
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.UpdateItem
            - description: Retrieves a single item from the movie table.
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.GetItem
            - description: Writes a batch of items to the movie table.
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.BatchWriteItem
            - description: Deletes a single item from the table.
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.DeleteItem
            - description: Queries the table for movies released in a particular year.
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.QueryItems
            - description: Scans the table for movies released in a range of years.
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.ScanTable
            - description: Deletes the movie table.
              snippet_tags:
                - DynamoDB.dotnetv3.dynamodb-basics.DeleteTableExample
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description: Run an interactive scenario to create the table and perform actions on it.
              snippet_tags:
                - gov2.dynamodb.Scenario_GettingStartedMovies
            - description: Define a Movie struct that is used in this example.
              snippet_tags:
                - gov2.dynamodb.Movie.struct
            - description: Create a struct and methods that call &DDB; actions.
              snippet_tags:
                - gov2.dynamodb.TableBasics.complete
    Kotlin:
      versions:
        - sdk_version: 1
          github: kotlin/services/dynamodb
          sdkguide:
          excerpts:
            - description: Create a &DDB; table.
              snippet_tags:
                - dynamodb.kotlin.scenario.create_table.main
            - description: Create a helper function to download and extract the sample JSON file.
              snippet_tags:
                - dynamodb.kotlin.scenario.populate_table.main
            - description: Get an item from a table.
              snippet_tags:
                - dynamodb.kotlin.scenario.get_item.main
            - description: Full example.
              snippet_tags:
                - dynamodb.kotlin.scenario.main
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Create a &DDB; table.
              snippet_tags:
                - dynamodb.java2.scenario.create_table.main
            - description: Create a helper function to download and extract the sample JSON file.
              snippet_tags:
                - dynamodb.java2.scenario.populate_table.main
            - description: Get an item from a table.
              snippet_tags:
                - dynamodb.java2.scenario.get_item.main
            - description: Full example.
              snippet_tags:
                - dynamodb.java2.scenario.main
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.basics.scenario
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Create a class that encapsulates a &DDB; table.
              snippet_tags:
                - python.example_code.dynamodb.helper.Movies.imports
                - python.example_code.dynamodb.helper.Movies.class_full
            - description: Create a helper function to download and extract the sample JSON file.
              snippet_tags:
                - python.example_code.dynamodb.helper.get_sample_movie_data
            - description: Run an interactive scenario to create the table and perform actions on it.
              snippet_tags:
                - python.example_code.dynamodb.Scenario_GettingStartedMovies
            - description: This scenario uses the following helper class to ask questions at a command prompt.
              snippet_tags:
                - python.example_code.dynamodb.helper.Question
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description: Create a class that encapsulates a &DDB; table.
              snippet_tags:
                - ruby.example_code.dynamodb.CreateTable
            - description: Create a helper function to download and extract the sample JSON file.
              snippet_tags:
                - ruby.example_code.dynamodb.helper.get_sample_movie_data
            - description: Run an interactive scenario to create the table and perform actions on it.
              snippet_tags:
                - ruby.example_code.dynamodb.Scenario_Basics
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - javascript.dynamodb_scenarios.dynamodb_basics
    SAP ABAP:
      versions:
        - sdk_version: 1
          github: sap-abap/services/dyn
          excerpts:
            - description:
              snippet_tags:
                - dyn.abapv1.getting_started_with_tables
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - cpp.example_code.dynamodb.Scenario_GettingStarted.main
                - cpp.example_code.dynamodb.Scenario_GettingStarted
                - cpp.example_code.dynamodb.scenario.createMoviesDynamoDBTable
                - cpp.example_code.dynamodb.scenario.deleteMoviesDynamoDBTable
                - cpp.example_code.dynamodb.scenario.waitTableActive
    Swift:
      versions:
        - sdk_version: 1
          github: swift/example_code/dynamodb
          excerpts:
            - description: A Swift class that handles &DDB; calls to the &Swift;.
              snippet_tags:
                - ddb.swift.basics.movietable
            - description: The structures used by the MovieTable class to represent movies.
              snippet_tags:
                - ddb.swift.basics.movie
            - description: A program that uses the MovieTable class to access a &DDB; database.
              snippet_tags:
                - ddb.swift.basics
    Bash:
      versions:
        - sdk_version: 2
          github: aws-cli/bash-linux/dynamodb
          excerpts:
            - description: The &DDB; getting started scenario.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.scenario_getting_started_movies
            - description: The &DDB; functions used in this scenario.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.CreateTable
                - aws-cli.bash-linux.dynamodb.DescribeTable
                - aws-cli.bash-linux.dynamodb.PutItem
                - aws-cli.bash-linux.dynamodb.UpdateItem
                - aws-cli.bash-linux.dynamodb.BatchWriteItem
                - aws-cli.bash-linux.dynamodb.GetItem
                - aws-cli.bash-linux.dynamodb.Query
                - aws-cli.bash-linux.dynamodb.Scan
                - aws-cli.bash-linux.dynamodb.DeleteItem
                - aws-cli.bash-linux.dynamodb.DeleteTable
            - description: The utility functions used in this scenario.
              snippet_tags:
                - aws-cli.bash-linux.dynamodb.iecho
                - aws-cli.bash-linux.dynamodb.errecho
                - aws-cli.bash-linux.dynamodb.aws_cli_error_log
  services:
    dynamodb: {DescribeTable, CreateTable, BatchWriteItem, PutItem, GetItem, UpdateItem, DeleteItem, Query, Scan, DeleteTable}
dynamodb_Scenario_PartiQLSingle:
  title: Query a &DDB; table using PartiQL and an &AWS; SDK
  title_abbrev: Query a table using PartiQL
  synopsis_list:
    - Get an item by running a SELECT statement.
    - Add an item by running an INSERT statement.
    - Update an item by running an UPDATE statement.
    - Delete an item by running a DELETE statement.
  category: Scenarios
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - PartiQL.dotnetv3.PartiQLBasicsScenario-Complete
                - PartiQL.dotnetv3.PartiQLBasicsScenario-GetSingleMovie
                - PartiQL.dotnetv3.PartiQLBasicsScenario-InsertSingleMovie
                - PartiQL.dotnetv3.PartiQLBasicsScenario-UpdateSingleMovie
                - PartiQL.dotnetv3.PartiQLBasicsScenario-DeleteSingleMovie
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description: Run a scenario that creates a table and runs PartiQL queries.
              snippet_tags:
                - gov2.dynamodb.Scenario_PartiQLSingle
            - description: Define a Movie struct that is used in this example.
              snippet_tags:
                - gov2.dynamodb.Movie.struct
            - description: Create a struct and methods that run PartiQL statements.
              snippet_tags:
                - gov2.dynamodb.PartiQLRunner.struct
                - gov2.dynamodb.ExecuteStatement.Insert
                - gov2.dynamodb.ExecuteStatement.Select
                - gov2.dynamodb.ExecuteStatement.Update
                - gov2.dynamodb.ExecuteStatement.Delete
    Kotlin:
      versions:
        - sdk_version: 1
          github: kotlin/services/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.kotlin.scenario.partiql.main
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.java2.scenario.partiql.main
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Execute single PartiQL statements.
              snippet_tags:
                - javascript.dynamodb_scenarios.partiQL_basics
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.partiql_basics.scenario
                - php.example_code.dynamodb.service.insertItemByPartiQL
                - php.example_code.dynamodb.service.getItemByPartiQL
                - php.example_code.dynamodb.service.updateItemByPartiQL
                - php.example_code.dynamodb.service.deleteItemByPartiQL
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          excerpts:
            - description: Create a class that can run PartiQL statements.
              snippet_tags:
                - python.example_code.dynamodb.helper.PartiQLWrapper.imports
                - python.example_code.dynamodb.helper.PartiQLWrapper.class_full
            - description: Run a scenario that creates a table and runs PartiQL queries.
              snippet_tags:
                - python.example_code.dynamodb.Scenario_PartiQLSingle
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description: Run a scenario that creates a table and runs PartiQL queries.
              snippet_tags:
                - ruby.example_code.dynamodb.Scenario_PartiQL_Single
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - cpp.example_code.dynamodb.Scenario_PartiQL_Single.main
                - cpp.example_code.dynamodb.Scenario_PartiQL_Single
                - cpp.example_code.dynamodb.scenario.createMoviesDynamoDBTable
                - cpp.example_code.dynamodb.scenario.deleteMoviesDynamoDBTable
                - cpp.example_code.dynamodb.scenario.waitTableActive
    Rust:
      versions:
        - sdk_version: 1
          github: rustv1/examples/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.rust.partiql-make_table
                - dynamodb.rust.partiql-add_item
                - dynamodb.rust.partiql-query_item
                - dynamodb.rust.partiql-remove_item
                - dynamodb.rust.partiql-remove_table
  services:
    dynamodb: {ExecuteStatement}
dynamodb_Scenario_PartiQLBatch:
  title: Query a &DDB; table by using batches of PartiQL statements and an &AWS; SDK
  title_abbrev: Query a table by using batches of PartiQL statements
  synopsis_list:
    - Get a batch of items by running multiple SELECT statements.
    - Add a batch of items by running multiple INSERT statements.
    - Update a batch of items by running multiple UPDATE statements.
    - Delete a batch of items by running multiple DELETE statements.
  category: Scenarios
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - PartiQL.dotnetv3.PartiQLBatchScenario
                - PartiQL.dotnetv3.PartiQLBatchScenario-GetBatch
                - PartiQL.dotnetv3.PartiQLBatchScenario-InsertMovies
                - PartiQL.dotnetv3.PartiQLBatchScenario-UpdateBatch
                - PartiQL.dotnetv3.PartiQLBatchScenario-DeleteBatch
    Go:
      versions:
        - sdk_version: 2
          github: gov2/dynamodb
          excerpts:
            - description: Run a scenario that creates a table and runs batches of PartiQL queries.
              snippet_tags:
                - gov2.dynamodb.Scenario_PartiQLBatch
            - description: Define a Movie struct that is used in this example.
              snippet_tags:
                - gov2.dynamodb.Movie.struct
            - description: Create a struct and methods that run PartiQL statements.
              snippet_tags:
                - gov2.dynamodb.PartiQLRunner.struct
                - gov2.dynamodb.BatchExecuteStatement.Insert
                - gov2.dynamodb.BatchExecuteStatement.Select
                - gov2.dynamodb.ExecuteStatement.Select.Projected
                - gov2.dynamodb.BatchExecuteStatement.Update
                - gov2.dynamodb.BatchExecuteStatement.Delete
    Kotlin:
      versions:
        - sdk_version: 1
          github: kotlin/services/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.kotlin.scenario.partiql.batch.main
    Java:
      versions:
        - sdk_version: 2
          github: javav2/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - dynamodb.java2.scenario.partiql.batch.main
    JavaScript:
      versions:
        - sdk_version: 3
          github: javascriptv3/example_code/dynamodb
          sdkguide:
          excerpts:
            - description: Execute batch PartiQL statements.
              snippet_tags:
                - javascript.dynamodb_scenarios.partiQL_batch_basics
    PHP:
      versions:
        - sdk_version: 3
          github: php/example_code/dynamodb
          excerpts:
            - description:
              snippet_tags:
                - php.example_code.dynamodb.partiql_batch.scenario
                - php.example_code.dynamodb.service.insertItemByPartiQLBatch
                - php.example_code.dynamodb.service.getItemByPartiQLBatch
                - php.example_code.dynamodb.service.updateItemByPartiQLBatch
                - php.example_code.dynamodb.service.deleteItemByPartiQLBatch
    Python:
      versions:
        - sdk_version: 3
          github: python/example_code/dynamodb
          excerpts:
            - description: Create a class that can run batches of PartiQL statements.
              snippet_tags:
                - python.example_code.dynamodb.helper.PartiQLBatchWrapper.imports
                - python.example_code.dynamodb.helper.PartiQLBatchWrapper.class_full
            - description: Run a scenario that creates a table and runs PartiQL queries in batches.
              snippet_tags:
                - python.example_code.dynamodb.Scenario_PartiQLBatch
    Ruby:
      versions:
        - sdk_version: 3
          github: ruby/example_code/dynamodb
          excerpts:
            - description: Run a scenario that creates a table and runs batch PartiQL queries.
              snippet_tags:
                - ruby.example_code.dynamodb.Scenario_PartiQL_Batch
    C++:
      versions:
        - sdk_version: 1
          github: cpp/example_code/dynamodb
          sdkguide:
          excerpts:
            - description:
              snippet_tags:
                - cpp.example_code.dynamodb.Scenario_PartiQL_Batch.main
                - cpp.example_code.dynamodb.Scenario_PartiQL_Batch
                - cpp.example_code.dynamodb.scenario.createMoviesDynamoDBTable
                - cpp.example_code.dynamodb.scenario.deleteMoviesDynamoDBTable
                - cpp.example_code.dynamodb.scenario.waitTableActive
  services:
    dynamodb: {BatchExecuteStatement}
dynamodb_HighLevelInterface:
  title: Use a high-level object persistence model for &DDB; using an &AWS; SDK
  title_abbrev: Use a high-level object persistence model
  synopsis: perform Create, Read, Update, and Delete (CRUD) and batch operations using an object persistence model for &DDB;
    and an &AWS; SDK.
  guide_topic:
    title: Object persistence model
    url: amazondynamodb/latest/developerguide/DotNetSDKHighLevel.html
  category: Scenarios
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb/high-level-api
          excerpts:
            - description: Perform CRUD operations using a high-level object persistence model.
              snippet_tags:
                - dynamodb.dotnetv3.HighLevelItemCRUDExample
            - description: Perform batch write operations using a high-level object persistence model.
              snippet_tags:
                - dynamodb.dotnetv3.HighLevelBatchWriteItemExample
            - description: Map arbitrary data to a table using a high-level object persistence model.
              snippet_tags:
                - dynamodb.dotnetv3.HighLevelMappingArbitraryDataExample
            - description: Query and scan a table using a high-level object persistence model.
              snippet_tags:
                - dynamodb.dotnetv3.HighLevelQueryAndScanExample
  services:
    dynamodb: {}
dynamodb_MidLevelInterface:
  title: Use a document model for &DDB; using an &AWS; SDK
  title_abbrev: Use a document model
  synopsis: perform Create, Read, Update, and Delete (CRUD) and batch operations using a document model for &DDB; and an &AWS;
    SDK.
  guide_topic:
    title: Document model
    url: amazondynamodb/latest/developerguide/DotNetSDKMidLevel.html
  category: Scenarios
  languages:
    .NET:
      versions:
        - sdk_version: 3
          github: dotnetv3/dynamodb/mid-level-api
          excerpts:
            - description: Perform CRUD operations using a document model.
              snippet_tags:
                - dynamodb.dotnetv3.MidlevelItemCRUDExample
            - description: Perform batch write operations using a document model.
              snippet_tags:
                - dynamodb.dotnetv3.MidLevelBatchWriteItemExample
            - description: Scan a table using a document model.
              snippet_tags:
                - dynamodb.dotnetv3.MidLevelScanOnlyExample
            - description: Query and scan a table using a document model.
              snippet_tags:
                - dynamodb.dotnetv3.MidLevelQueryAndScanExample
  services:
    dynamodb: {}
dynamodb_local:
  title: Connect to a local &DDB; instance using an &AWS; SDK
  title_abbrev: Connect to a local instance
  synopsis: override an endpoint URL to connect to a local development deployment of &DDB; and an &AWS; SDK.
  guide_topic:
    title: DynamoDB Local
    url: amazondynamodb/latest/developerguide/DynamoDBLocal.html
  category: Scenarios
  languages:
    Rust:
      versions:
        - sdk_version: 1
          github: rustv1/examples/dynamodb
          excerpts:
            - snippet_files:
                - rustv1/examples/dynamodb/src/bin/list-tables-local.rs
  services:
    dynamodb: {}
