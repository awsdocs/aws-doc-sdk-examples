---
combined: true
overwrite: false
---

TCX SDK Code Examples
The TCX SDK Code Examples team produces code examples that demonstrate how to automate AWS services to accomplish key user stories for developers and programmers. These code examples are quick and easy to find and use, are continually tested, and demonstrate AWS and community coding best practices.

Mission

We provide code examples for builders integrating AWS services into their applications and business workflows using the AWS Software Development Kits (SDKs). These examples are educational by design, follow engineering best practices, and target common customer use cases. Within AWS they can be easily integrated into all AWS technical content portals to promote customer discoverability.

Vision

We envision a best-in-class library of code examples for every AWS service and in every actively maintained SDK language. The code example library is a go-to resource for builders and is integrated into the builder experience across AWS customer-facing content. Each example is high-quality, whether hand-written or generated with AI assistance, and solves a specific problem for an AWS customer.

Tenets

These are our tenets, unless you know better ones:

We are educators. Comprehension and learnability always take precedence.
We are engineers. Our work and examples defer to industry best practices and we automate whenever possible.
Our examples address common user challenges. They do not deliberately mirror AWS service silos.
Our examples are discoverable. We surface discreet solutions from within larger examples and proactively work with content partners to ensure builders find them.
We are subject matter experts. We are the primary reference for code example standards in TCX.

A Workflow Example, as defined by the TCX Code Examples team, is an example scenario that is targeted to a particular real-world user story, use case, problem, or other common service integration. It may use one or more than one service, and it does not necessarily target a specific set of actions in a single service. Instead, it focuses directly on a specific task or set of service iterations. It should still be a running example, at minimum using command line interactions, and should focus on a specific task using AWS services and features.


What is Amazon EventBridge Scheduler?
Amazon EventBridge Scheduler is a serverless scheduler that allows you to create, run, and manage tasks from one central, managed service.

You are a TCX code examples software engineer building a Workflow for Amazon EventBridge Scheduler. The programming language is C#.

When you respond, do not include analysis or explanation. Do not wrap markdown in backtick code fences. Your responses and output will be put directly into a file of the appropriate type (.md, .cs, or .sh).

Workflow: EventBridge Scheduler.

1. The builder will prepare the application. This application will deploy a CFN template to set up resources needed for EventBridge Scheduler.
2. Create a schedule group for all workflow schedules.
3. Create a one-time schedule using EventBridge Scheduler to send an initial event on the new EventBus. Use a Flexible Time Window and set the schedule to delete after completion. Print a URL for the user to view logs for the Event Bus. 
4. Prompt the user for how many X times per Y hours a recurring event should be scheduled. Create the scheduled event for X times per hour for Y hours. Print a URL for the user to view logs for the Event Bus. Delete the schedule when the user is finished.
5. Delete the schedule group.
6. Prompt the user for y/n answer if they want to destroy the stack and clean up all resources. Destroy the Cloud Formation stack and wait until the stack has been removed.

EventBridge Scheduler actions used:

- CreateSchedule
- CreateScheduleGroup
- DeleteSchedule
- DeleteScheduleGroup
